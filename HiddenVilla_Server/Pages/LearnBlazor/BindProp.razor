@page "/bindprop"
@using Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage localStorage
@inject ProtectedSessionStorage sessionStorage

<div class="bg-light border p-2">
    <h2 class="bg-light border p-2">
        First Room
    </h2>
    Room: @Room.RoomName
    <br />
    Price: @Room.Price
    <br />

    <input type="number" @bind-value="Room.Price" @bind-value:event="oninput" />
    <br />
    <br />
    <input type="checkbox" @bind-value="Room.IsActive" checked="@(Room.IsActive?"checked":null)" />
    <br />
    <span>This room is @(Room.IsActive?"Active":"Inactive")</span><br />

    <select @bind="SelectedRoomProp">
        @foreach (var prop in Room.RoomProps)
        {
            <option value="@prop.Name">@prop.Name</option>
        }
    </select>
    <span>The room prop selected is: @SelectedRoomProp</span>
</div>






<div>
    <br />
    <h2 class="text-info">Room List</h2>
    <table class="table table-dark">
        @foreach (var room in RoomsList)
        {
            <tr>
                <td>
                    <input type="text" @bind-value="room.RoomName" @bind-value:event="oninput" />
                </td>
                <td>
                    <input type="text" @bind-value="room.Price" @bind-value:event="oninput" />
                </td>
                @foreach (var roomProp in room.RoomProps)
                {
                    <td>@roomProp.Name - @roomProp.Value</td>
                }
            </tr>
        }
    </table>
    <br />
    @foreach (var room in RoomsList)
    {
        <p>@room.RoomName's Price is @room.Price</p>
    }
</div>



<p>Counter value from other page (Session): @CounterSession</p>
<p>Counter value from other page (Local): @CounterLocal</p>


@code{

    string SelectedRoomProp = "";
    List<BlazorRoom> RoomsList = new List<BlazorRoom>();

    public int CounterSession { get; set; }
    public int CounterLocal { get; set; }


    private string CheckActive = "NOT active";

    BlazorRoom Room = new BlazorRoom()
    {
        Id = 201,
        RoomName = "Villa Suite One Bed Room",
        IsActive = true,
        Price = 399,
        RoomProps = new List<BlazorRoomProp>
        {
                new BlazorRoomProp{Id = 1, Name = "Sq Ft", Value = "330"},
                new BlazorRoomProp{Id = 2, Name = "Occupancy", Value = "4"}
            }
    };


    protected override async Task OnInitializedAsync()
    {


        var resultLocal = await localStorage.GetAsync<int>("counterLocal");
        CounterLocal = resultLocal.Success ? resultLocal.Value : 0;

        var resultSession = await localStorage.GetAsync<int>("counterSession");
        CounterSession = resultSession.Success ? resultSession.Value : 0;



        base.OnInitialized();

        RoomsList.Add(new BlazorRoom()
        {
            Id = 201,
            RoomName = "Villa Suite One Bed Room",
            IsActive = true,
            Price = 399,
            RoomProps = new List<BlazorRoomProp>
        {
                new BlazorRoomProp{Id = 1, Name = "Sq Ft", Value = "330"},
                new BlazorRoomProp{Id = 2, Name = "Occupancy", Value = "4"}
            }
        });

        RoomsList.Add(new BlazorRoom()
        {
            Id = 301,
            RoomName = "Villa Suite Two Bed Room",
            IsActive = true,
            Price = 699,
            RoomProps = new List<BlazorRoomProp>
        {
                new BlazorRoomProp{Id = 1, Name = "Sq Ft", Value = "150"},
                new BlazorRoomProp{Id = 2, Name = "Occupancy", Value = "6"}
            }
        });
    }
}